{"version":3,"sources":["Factories/ship.js","Factories/Player.js","Factories/Gameboard.js","ComputerBoard.js","ShipPlacer.js","PlayerBoard.js","GameInfo.js","Header.js","App.js","index.js"],"names":["shipFactory","length","shipLife","shipLength","hit","isSunk","playerFactory","name","playerName","board","boardArray","shipArray","i","push","ship","initBoard","prevAttack","idx","placeShip","horizontal","shipPlaced","positionArray","every","item","splice","currentShip","receiveAttack","shipsSunk","gameboardFactory","randIdxOrientation","randomIdx","Math","floor","random","randomOrientation","shipLengths","randomMove","randomIndex","randomPlacement","forEach","ComputerBoard","player2","setPlayer2","playRound","useEffect","playerCopy2","className","map","boardCell","index","onClick","e","data-index","data-hit","ShipPlacer","setHorizontal","player1","type","PlayerBoard","shipsPlaced","setPlayer1","playerPlacement","GameInfo","winner","gameOver","Header","App","useState","setIndex","setWinner","setGameOver","setShipsPlaced","playerCopy1","Object","assign","parseInt","target","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e2b9722.chunk.js","sourcesContent":["export default function shipFactory(length) {\n  const shipLength = length;\n\n  let shipLife = length;\n\n  const hit = function () {\n    shipLife--;\n  };\n  const isSunk = function () {\n    return shipLife < 1 ? true : false;\n  };\n\n  return { shipLength, hit, isSunk };\n}\n","import gameboardFactory from \"./Gameboard\";\n\nexport default function playerFactory(name) {\n  const playerName = name;\n\n  const board = gameboardFactory();\n\n  const randomMove = () => {\n    function randomIndex() {\n      const randomIdx = Math.floor(Math.random() * 100);\n      if (board.boardArray[randomIdx].hit === false) {\n        return randomIdx;\n      }\n      if (board.boardArray[randomIdx].hit === true) {\n        return randomIndex();\n      }\n    }\n    const idx = randomIndex();\n    board.receiveAttack(idx);\n  };\n\n  function randIdxOrientation(shipLength) {\n    const randomIdx = Math.floor(Math.random() * 100);\n    const orientations = [true, false];\n    const randomOrientation = Math.floor(Math.random() * 2);\n    if (\n      !board.placeShip(shipLength, randomIdx, orientations[randomOrientation])\n    ) {\n      return randIdxOrientation(shipLength);\n    }\n  }\n\n  const shipLengths = [5, 4, 3, 3, 2];\n\n  const randomPlacement = () => {\n    shipLengths.forEach((shipLength) => {\n      randIdxOrientation(shipLength);\n    });\n  };\n\n  return { playerName, board, randomMove, shipLengths, randomPlacement };\n}\n","/* eslint-disable no-plusplus */\nimport shipFactory from \"./ship\";\n\nexport default function gameboardFactory() {\n  const boardArray = [];\n  const shipArray = [];\n  const initBoard = () => {\n    for (let i = 0; i < 100; i++) {\n      boardArray.push({\n        ship: false,\n        hit: false,\n      });\n    }\n  };\n\n  if (boardArray.length < 1) {\n    initBoard();\n  }\n\n  let prevAttack = {\n    hit: null,\n    idx: null,\n  };\n\n  const placeShip = function (length, idx, horizontal) {\n    let shipPlaced = false;\n    if (horizontal) {\n      // checking to see if full length of ship will fit on board\n      const shipPlacement = idx % 10;\n      if (length + shipPlacement <= 10) {\n        // checking to see if all positions on board are free for the ship\n        let positionArray = [];\n        for (let i = idx; i < length + idx; i++) {\n          positionArray.push(boardArray[i]);\n        }\n        if (positionArray.every((item) => item.ship === false)) {\n          shipPlaced = true;\n          let ship = shipFactory(length);\n          shipArray.push(ship);\n          for (let i = idx; i < length + idx; i++) {\n            boardArray.splice(i, 1, {\n              currentShip: ship,\n              ship: true,\n              hit: false,\n            });\n          }\n        }\n      }\n    }\n    if (!horizontal) {\n      if (idx + (length - 1) * 10 < 100) {\n        let positionArray = [];\n        for (let i = idx; i <= idx + (length - 1) * 10; i += 10) {\n          positionArray.push(boardArray[i]);\n        }\n        if (positionArray.every((item) => item.ship === false)) {\n          shipPlaced = true;\n          let ship = shipFactory(length);\n          shipArray.push(ship);\n          for (let i = idx; i <= idx + (length - 1) * 10; i += 10) {\n            boardArray.splice(i, 1, {\n              currentShip: ship,\n              ship: true,\n              hit: false,\n            });\n          }\n        }\n      }\n    }\n    return shipPlaced;\n  };\n\n  const receiveAttack = (idx) => {\n    if (boardArray[idx].ship === true && boardArray[idx].hit === false) {\n      boardArray[idx].currentShip.hit();\n      boardArray[idx].hit = true;\n      prevAttack.hit = true;\n      prevAttack.idx = idx;\n    } else if (\n      boardArray[idx].ship === false &&\n      boardArray[idx].hit === false\n    ) {\n      boardArray[idx].hit = true;\n      prevAttack.hit = false;\n      prevAttack.idx = null;\n    }\n  };\n\n  const shipsSunk = function () {\n    if (shipArray.length > 0) {\n      return shipArray.every((item) => item.isSunk() === true);\n    }\n  };\n\n  return {\n    boardArray,\n    shipArray,\n    placeShip,\n    receiveAttack,\n    shipsSunk,\n    prevAttack,\n  };\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from \"react\";\n\nfunction ComputerBoard({ player2, setPlayer2, playRound }) {\n  useEffect(() => {\n    const playerCopy2 = { ...player2 };\n    playerCopy2.randomPlacement();\n    setPlayer2(playerCopy2);\n  }, []);\n\n  return (\n    <div className=\"board-wrapper\">\n      <div className=\"gameboard\">\n        {player2.board.boardArray.map((boardCell, index) => (\n          <div\n            onClick={(e) => playRound(e)}\n            data-index={index}\n            data-hit={boardCell.hit}\n            className={`cell ${\n              boardCell.hit && boardCell.ship ? \"cell-ship-hit\" : null\n            } \n            ${!boardCell.hit ? \"cell-water\" : null} \n\n            ${boardCell.hit && !boardCell.ship ? \"cell-water-hit\" : null}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ComputerBoard;\n","import React from \"react\";\n\nfunction ShipPlacer({ setHorizontal, horizontal, index, player1 }) {\n  return (\n    <div className=\"ship-placer\">\n      <table className=\"table\">\n        <tr>\n          <th>Orientation</th>{\" \"}\n          <td>\n            <button type=\"button\" onClick={() => setHorizontal(!horizontal)}>\n              {horizontal ? \"Horizontal\" : \"Vertical\"}{\" \"}\n            </button>\n          </td>\n        </tr>\n        <tr>\n          <th>Ship Length: </th> <td> {player1.shipLengths[index]}</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default ShipPlacer;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport ShipPlacer from \"./ShipPlacer\";\n\nfunction PlayerBoard({\n  player1,\n  setPlayer1,\n  shipsPlaced,\n  playerPlacement,\n  horizontal,\n  setHorizontal,\n  index,\n}) {\n  return (\n    <div className=\"player-board\">\n      {!shipsPlaced && (\n        <ShipPlacer\n          setHorizontal={setHorizontal}\n          horizontal={horizontal}\n          index={index}\n          player1={player1}\n        />\n      )}\n      <div className=\"board-wrapper\">\n        <div className=\"gameboard\">\n          {player1.board.boardArray.map((boardCell, index) => (\n            <div\n              onClick={(e) => playerPlacement(e)}\n              data-index={index}\n              className={`cell ${\n                boardCell.hit && boardCell.ship ? \"cell-ship-hit\" : null\n              }\n              ${boardCell.hit && !boardCell.ship ? \"cell-water-hit\" : null}\n              ${boardCell.ship ? \"cell-ship\" : \"cell-water\"}`}\n            ></div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerBoard;\n","import React from \"react\";\n\nfunction GameInfo({ winner, gameOver, shipsPlaced }) {\n  return (\n    <div>\n      <h2>{winner ? `Winner: ${winner}` : null}</h2>\n      <h2>\n        {gameOver && !shipsPlaced\n          ? \"Place your ships\"\n          : null || (!gameOver && shipsPlaced)\n          ? \"Attack your opponent\"\n          : null || (gameOver && shipsPlaced)\n          ? \"GAME OVER\"\n          : null}\n      </h2>\n    </div>\n  );\n}\n\nexport default GameInfo;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1 className=\"header\">Battleships</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","/* eslint-disable jsx-quotes */\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport playerFactory from \"./Factories/Player\";\nimport ComputerBoard from \"./ComputerBoard\";\nimport PlayerBoard from \"./PlayerBoard\";\nimport GameInfo from \"./GameInfo\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const [player1, setPlayer1] = useState(playerFactory(\"Player 1\"));\n\n  const [player2, setPlayer2] = useState(playerFactory(\"Computer\"));\n\n  const [horizontal, setHorizontal] = useState(true);\n\n  const [index, setIndex] = useState(0);\n\n  const [winner, setWinner] = useState(null);\n\n  const [gameOver, setGameOver] = useState(true);\n\n  const [shipsPlaced, setShipsPlaced] = useState(false);\n\n  const playerPlacement = (e) => {\n    if (!shipsPlaced && gameOver) {\n      let playerCopy1 = Object.assign({}, player1);\n      if (\n        playerCopy1.board.placeShip(\n          playerCopy1.shipLengths[index],\n          parseInt(e.target.dataset.index),\n          horizontal\n        )\n      ) {\n        setPlayer1(playerCopy1);\n        setIndex(index + 1);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setPlayer1(playerFactory(\"Player 1\"));\n    let playerCopy2 = playerFactory(\"Computer\");\n    playerCopy2.randomPlacement();\n    setPlayer2(playerCopy2);\n    setShipsPlaced(false);\n    setGameOver(true);\n    setIndex(0);\n    setWinner(null);\n  };\n\n  const playRound = (e) => {\n    if (!gameOver && e.target.dataset.hit === \"false\") {\n      let playerCopy2 = Object.assign({}, player2);\n      let index = e.target.dataset.index;\n      playerCopy2.board.receiveAttack(index);\n      setPlayer2(playerCopy2);\n      let playerCopy1 = Object.assign({}, player1);\n      playerCopy1.randomMove();\n      setPlayer1(playerCopy1);\n    }\n  };\n\n  useEffect(() => {\n    if (player1.board.shipsSunk()) {\n      setWinner(player2.playerName);\n      setGameOver(true);\n    } else if (player2.board.shipsSunk()) {\n      setWinner(player1.playerName);\n      setGameOver(true);\n    } else if (!player2.board.shipsSunk() && !player1.board.shipsSunk()) {\n      setWinner(null);\n    }\n  }, [player1, player2]);\n\n  useEffect(() => {\n    if (index > 4 && gameOver) {\n      setShipsPlaced(true);\n      setGameOver(false);\n    }\n  }, [index]);\n  return (\n    <div className=\"App\">\n      <Header />\n      <GameInfo winner={winner} gameOver={gameOver} shipsPlaced={shipsPlaced} />\n      <div className=\"gameboard-container\">\n        <div className=\"player-board\">\n          <h3>Player Board</h3>\n          <PlayerBoard\n            player1={player1}\n            setPlayer1={setPlayer1}\n            playerPlacement={playerPlacement}\n            shipsPlaced={shipsPlaced}\n            horizontal={horizontal}\n            setHorizontal={setHorizontal}\n            index={index}\n          />\n        </div>\n        <div className=\"computer-board\">\n          <h3>Computer Board</h3>\n          <ComputerBoard\n            className=\"gameboard-container\"\n            player2={player2}\n            setPlayer2={setPlayer2}\n            playRound={playRound}\n          />\n        </div>\n      </div>\n      <button type=\"button\" className=\"reset-button\" onClick={resetGame}>\n        New Game\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}